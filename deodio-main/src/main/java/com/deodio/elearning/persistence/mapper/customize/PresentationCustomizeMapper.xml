<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deodio.elearning.persistence.mapper.customize.PresentationCustomizeMapper">
  <resultMap id="BaseMediaResultMap" type="com.deodio.elearning.persistence.model.Media">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 11 10:03:53 CST 2016.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="media_name" jdbcType="VARCHAR" property="mediaName" />
    <result column="media_desc" jdbcType="VARCHAR" property="mediaDesc" />
    <result column="media_size" jdbcType="BIGINT" property="mediaSize" />
    <result column="media_ext" jdbcType="VARCHAR" property="mediaExt" />
    <result column="media_url" jdbcType="VARCHAR" property="mediaUrl" />
    <result column="media_dir" jdbcType="VARCHAR" property="mediaDir" />
    <result column="media_length" jdbcType="BIGINT" property="mediaLength" />
    <result column="media_type" jdbcType="INTEGER" property="mediaType" />
    <result column="media_cover" jdbcType="VARCHAR" property="mediaCover" />
    <result column="media_width" jdbcType="INTEGER" property="mediaWidth" />
    <result column="media_height" jdbcType="INTEGER" property="mediaHeight" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="media_start" jdbcType="INTEGER" property="mediaStart" />
    <result column="media_end" jdbcType="BIGINT" property="mediaEnd" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="media_original_name" jdbcType="VARCHAR" property="mediaOriginalName" />
  </resultMap>
  
  <resultMap id="BaseSlideResultMap" type="com.deodio.elearning.persistence.model.Slides">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 13 15:37:10 CST 2016.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="slide_name" jdbcType="VARCHAR" property="slideName" />
    <result column="slide_size" jdbcType="BIGINT" property="slideSize" />
    <result column="slide_ext" jdbcType="VARCHAR" property="slideExt" />
    <result column="slide_url" jdbcType="VARCHAR" property="slideUrl" />
    <result column="slide_dir" jdbcType="VARCHAR" property="slideDir" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="slide_original_name" jdbcType="VARCHAR" property="slideOriginalName" />
  </resultMap>
  
  <resultMap id="BaseSyncMediaResultMap" type="com.deodio.elearning.persistence.model.PresentationSyncMedia">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="presentation_id" jdbcType="VARCHAR" property="presentationId" />
    <result column="media_id" jdbcType="VARCHAR" property="mediaId" />
    <result column="media_name" jdbcType="VARCHAR" property="mediaName" />
    <result column="media_size" jdbcType="BIGINT" property="mediaSize" />
    <result column="media_ext" jdbcType="VARCHAR" property="mediaExt" />
    <result column="media_url" jdbcType="VARCHAR" property="mediaUrl" />
    <result column="media_dir" jdbcType="VARCHAR" property="mediaDir" />
    <result column="media_length" jdbcType="BIGINT" property="mediaLength" />
    <result column="media_type" jdbcType="INTEGER" property="mediaType" />
    <result column="media_order" jdbcType="INTEGER" property="mediaOrder" />
    <result column="media_cover" jdbcType="VARCHAR" property="mediaCover" />
    <result column="media_start" jdbcType="BIGINT" property="mediaStart" />
    <result column="media_end" jdbcType="BIGINT" property="mediaEnd" />
    <result column="media_width" jdbcType="INTEGER" property="mediaWidth" />
    <result column="media_height" jdbcType="INTEGER" property="mediaHeight" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="media_original_name" jdbcType="VARCHAR" property="mediaOriginalName" />
    <result column="media_convert_status" jdbcType="INTEGER" property="mediaConvertStatus" />
    <result column="media_job_id" jdbcType="VARCHAR" property="mediaJobId" />
  </resultMap>
  
  
   <resultMap id="BasePresentationBotMap" type="com.deodio.elearning.persistence.model.customize.PresentationBo"
  	 extends="com.deodio.elearning.persistence.mapper.PresentationMapper.BaseResultMap" >
  	
  	   <result column="attach_url" jdbcType="VARCHAR" property="attachUrl" />
    <result column="generate_name" jdbcType="VARCHAR" property="generateName" />
  	
  </resultMap>
  
  
  
	<!-- 设置Presentation信息 - 获取详细信息（关联查询图片路径） -->
	 <select id="getPresentationInfo" parameterType="java.util.Map"  resultType="java.util.Map">
		 SELECT
			pre.ID,
			pre.presentation_name,
			pre.presentation_desc,
			pre.presentation_model,
			pre.persentation_percentage,
			pre.is_pass_elements,
			pre.is_pass_quizs,
			pre.is_course,
			pre.is_pass_hours,
			pre.is_pass_percentage,
			pre.presentation_cover,
			pre.create_time,
			pre.create_id,
			pre.is_publish,
			pre.presentation_owner,
			CASE WHEN 
	 		   		t_user.nick_name IS NULL THEN concat (t_user.first_name, '.', t_user.last_name)
			ELSE
					t_user.nick_name
			END AS username,
			att.ID attachment_id,
			att.attach_dir,
			att.attach_url,
			att.rel_id,
			att.attach_name,
			att.attach_ext,
			att.attach_type,
			att.generate_name,
			(
				SELECT
					string_agg(tgs.tag_name,',')
				FROM
					t_tags tgs
				WHERE
					tgs. ID IN (
						SELECT
							tgsrel.tags_id
						FROM
							t_tags_items_rel tgsrel
						WHERE
							tgsrel.item_id = pre.ID
						and tgsrel.item_type = 1
					)
			) tag_name,
			(
				SELECT
					string_agg (cl.classification_name, ',') classification_name
				FROM
					t_classification cl
				WHERE
					cl. ID IN (
						SELECT
							prel.classification_id
						FROM
							t_classification_items_rel prel
						WHERE
							prel.item_id = pre.ID
						 and prel.item_type = 1
				)
			)  classification_name
		FROM
			t_presentation pre
		LEFT JOIN t_user on t_user.id = pre.create_id
		LEFT JOIN t_attachment att on pre.id = att.rel_id  AND att.attach_type = '5'
		where 1=1
		<if test="presentationId != null">
			and pre. ID = #{presentationId,jdbcType=VARCHAR}
		</if>
		<if test="accountId != null">
			and pre. account_id = #{accountId,jdbcType=VARCHAR} 
		</if>
	 </select>
	 
	  <select id="getPresentationPackageInfo" parameterType="java.util.Map"  resultType="java.util.Map">
		 SELECT
			package. ID,
			package.count_down,
			package.is_count_down,
			package.presentation_id,
			package.create_id,
			package.create_time,
			package.update_id,
			package.update_time
		FROM
			t_presentation_model_package package
		where 1=1 
		<if test="presentationId != null">
			and package. presentation_id = #{presentationId,jdbcType=VARCHAR}
		</if>
	 </select>
	 
	
 	<update id="updatePresentationSyncMediaById" parameterType="com.deodio.elearning.persistence.model.PresentationSyncMedia">
    update t_presentation_sync_media
    <set>
      <if test="presentationId != null">
        presentation_id = #{presentationId,jdbcType=VARCHAR},
      </if>
      <if test="mediaId != null">
        media_id = #{mediaId,jdbcType=VARCHAR},
      </if>
      <if test="mediaName != null">
        media_name = #{mediaName,jdbcType=VARCHAR},
      </if>
      <if test="mediaSize != null">
        media_size = #{mediaSize,jdbcType=BIGINT},
      </if>
      <if test="mediaExt != null">
        media_ext = #{mediaExt,jdbcType=VARCHAR},
      </if>
      <if test="mediaUrl != null">
        media_url = #{mediaUrl,jdbcType=VARCHAR},
      </if>
      <if test="mediaDir != null">
        media_dir = #{mediaDir,jdbcType=VARCHAR},
      </if>
      <if test="mediaLength != null">
        media_length = #{mediaLength,jdbcType=BIGINT},
      </if>
      <if test="mediaType != null">
        media_type = #{mediaType,jdbcType=INTEGER},
      </if>
      <if test="mediaOrder != null">
        media_order = #{mediaOrder,jdbcType=INTEGER},
      </if>
      <if test="mediaCover != null">
        media_cover = #{mediaCover,jdbcType=VARCHAR},
      </if>
      <if test="mediaStart != null">
        media_start = #{mediaStart,jdbcType=BIGINT},
      </if>
      <if test="mediaEnd != null">
        media_end = #{mediaEnd,jdbcType=BIGINT},
      </if>
      <if test="mediaWidth != null">
        media_width = #{mediaWidth,jdbcType=INTEGER},
      </if>
      <if test="mediaHeight != null">
        media_height = #{mediaHeight,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
       <if test="mediaJobId != null">
        media_job_id = #{mediaJobId,jdbcType=VARCHAR},
      </if>
      <if test="mediaConvertStatus != null">
        media_convert_status = #{mediaConvertStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where presentation_id = #{presentationId,jdbcType=VARCHAR} and media_id = #{mediaId,jdbcType=VARCHAR}
  </update>
  
  <select id="findMediaInfoList" parameterType="java.util.Map"  resultType="java.util.Map">
  	SELECT 
	  	 atta.*,
	  	 media.media_length
  	FROM 
      	t_attachment atta
    INNER JOIN
    	t_attachment_model_media media
    ON
    	atta.id = media.media_id
   	WHERE 
      	atta.attach_type = '54'
	AND 
		atta.is_convert = '1'
	AND 
		atta.create_id =#{ userId }
   	<if test="queryMediaInfo != null">
    AND  
    	atta.attach_name LIKE CONCAT('%',#{queryMediaInfo},'%' ) 
  	</if>
    <if test="presentationId != null">
    AND NOT EXISTS (
		SELECT
			1
		FROM
			t_presentation_sync_media sync
		WHERE
			sync.presentation_id = #{presentationId}
		AND	
			sync.media_id = atta.id
		)
    </if>
   	ORDER BY 
   		create_time DESC
  </select>
  
  <select id="findSlideInfoList" parameterType="java.util.Map"  resultType="java.util.Map">
  	  SELECT
			atta. ID,
			atta.attach_dir,
			atta.attach_url,
			atta.rel_id,
			atta.attach_name,
			atta.attach_ext,
			atta.attach_type,
			atta.create_id,
			atta.create_time,
			atta.update_id,
			atta.update_time,
			atta.generate_name,
			atta.attach_size
		FROM
			t_attachment atta
		WHERE
			atta.attach_type = '53'
		AND atta.is_convert = '1'
		<if test="presentationId != null">
		AND NOT EXISTS (
			SELECT
				1
			FROM
				t_presentation_sync_slides sync
			WHERE
				sync.presentation_id = #{presentationId}
			AND	
				sync.slide_id = atta.id
		)
		</if>
		<if test="querySlideInfo != null">
		AND atta.attach_name LIKE CONCAT ('%', #{querySlideInfo}, '%')
		</if>
		 <if test="userId != null">
		AND atta.create_id =#{ userId }
		</if>
		ORDER BY
			atta.create_time DESC
  </select>
  
  <select id="getMediaCount" parameterType="java.util.Map"  resultType="java.lang.Integer">
  	  select 
	  	  count(*)
      from t_media
      where 1=1 
      <if test="accountId != null">
      	and account_id = #{accountId}
      </if>
      <if test="queryMediaInfo != null">
      	and media_original_name like CONCAT('%','${queryMediaInfo}','%' ) 
      </if>
  </select>
  
  <select id="getSlideCount" parameterType="java.util.Map"  resultType="java.lang.Integer">
  	  select 
	  	  count(*)
      from t_slides
      where 1=1 
      <if test="accountId != null">
      	and account_id = #{accountId}
      </if>
      <if test="querySlideInfo != null">
      	and slide_original_name like CONCAT('%','${querySlideInfo}','%' ) 
      </if>
  </select>
  
  <!-- 获取attachment中多媒体信息-->
  <select id="getMediaList" parameterType="java.util.List" resultMap="BaseMediaResultMap">
 		SELECT
			atta. ID AS ID,
			atta.attach_name AS media_name,
			'' AS media_desc,
			atta.attach_size AS media_size,
			atta.attach_ext AS media_ext,
			atta.attach_url AS media_url,
			atta.attach_dir AS media_dir,
			atta_model_media.media_length AS media_length,
			atta_model_media.media_type AS media_type,
			atta_model_media.media_cover AS media_cover,
			atta_model_media.media_width AS media_width,
			atta_model_media.media_height AS media_height,
			atta_model_media.media_start AS media_start,
			atta_model_media.media_end AS media_end,
			atta.generate_name AS media_original_name
		FROM
			t_attachment atta
		INNER JOIN 
			t_attachment_model_media atta_model_media 
		ON 
			atta. ID = atta_model_media.media_id
      	WHERE 
      		atta.id IN
      	<foreach collection="list" item="item" open="(" separator=","  close=")">
	        #{item.id}
	  	</foreach>
  </select>
  
  <!-- 获取attachment中多媒体信息-->
  <select id="getSyncMediaListFromAttachment" parameterType="java.util.List" resultMap="BaseSyncMediaResultMap">
 		SELECT
			id,
			media_id ,
			item_name as media_name,
			item_size as media_size,
			item_ext as media_ext,
			item_url as media_url,
			item_dir as media_dir,
			item_length as media_length,
			item_type as media_type,
			item_order as media_order,
			item_cover as media_cover,
			item_start as media_start,
			item_end as media_end,
			item_width as media_width,
			item_height as media_height,
			item_original_name as media_original_name,
			'1' as media_convert_status
		FROM
			t_attachment_media_item
      	WHERE 
      		media_id IN
      	<foreach collection="list" item="item" open="(" separator=","  close=")">
	        #{item.id}
	  	</foreach>
  </select>
  
  
  <insert id="saveSyncMediaList" parameterType="java.util.List">
 		INSERT INTO t_presentation_sync_media (
 			id, presentation_id, media_id, media_name, media_size, media_ext, media_url, media_dir, 
		    media_length, media_type, media_order, media_cover, media_start, media_end, media_width, 
		    media_height, create_id, create_time, media_original_name,media_convert_status
 		)
	    VALUES 
	    <foreach collection="list" item="item"  separator="," >
	        (#{item.id},#{item.presentationId},#{item.mediaId},#{item.mediaName},#{item.mediaSize},
	        #{item.mediaExt},#{item.mediaUrl},#{item.mediaDir},#{item.mediaLength},#{item.mediaType},
	        #{item.mediaOrder},#{item.mediaCover},#{item.mediaStart},#{item.mediaEnd},#{item.mediaWidth},
	        #{item.mediaHeight},#{item.createId},#{item.createTime},#{item.mediaOriginalName},#{item.mediaConvertStatus}
	        )
	    </foreach>
	 </insert>
	 
	 <!-- PPT转换图片添加 -->
	 <insert id="insertSyncSlidesList" parameterType="java.util.List">
 		INSERT INTO t_presentation_sync_slides (id, presentation_id, slide_id, slide_name, slide_size, slide_ext, slide_url, slide_dir, 
    		slide_order, create_id, create_time, slide_original_name)
	    VALUES 
	    <foreach collection="list" item="item"  separator="," >
	        (#{item.id},#{item.presentationId},#{item.slideId},#{item.slideName},#{item.slideSize},#{item.slideExt},#{item.slideUrl},#{item.slideDir},
	        #{item.slideOrder},#{item.createId},#{item.createTime},#{item.slideOriginalName})
	    </foreach>
	 </insert>
	 
	 <!-- ppt反查询 -->
	 <select id="selectSyncSlidesList" parameterType="String"  resultMap="BaseSlideResultMap">
  	  select 
	  		id, slide_name, slide_size, slide_ext, slide_url, slide_dir, create_id, create_time, 
    		update_id, update_time, account_id, slide_original_name
      from t_slides
      where presentation_id = #{presentationId}
  </select>
  
  
  <!-- ppt和图片删除 -->
 	<delete id="delSyncSlide" parameterType="java.util.Map">
	 	delete from t_presentation_sync_slides  where slide_id = #{slideId} and presentation_id = #{presentationId}
 	</delete>
 	
 	<!-- 系统多媒体保存 查询保存的目标多媒体或PPT详细-->
  <select id="getSyncList" parameterType="java.util.List" resultType="java.util.Map">
 	 select 
  	  	id, slide_name, slide_size, slide_ext, slide_url, slide_dir, create_id, create_time, 
   		update_id, update_time, account_id, slide_original_name
      from t_slides
      where id in<foreach collection="list" item="item" open="(" separator=","  close=")">
	        #{item.id}
	    </foreach>
  </select>
  
  <!-- 多媒体库图片或者PPT保存 -->
  <insert id="saveSlideList" parameterType="java.util.List">
		INSERT INTO t_presentation_sync_slides (
			id, presentation_id, slide_id, slide_name, slide_size, slide_ext, slide_url, slide_dir, 
    		slide_order, create_id, create_time, slide_original_name
		)
    VALUES 
    <foreach collection="list" item="item"  separator="," >
        (#{item.id},#{item.presentation_id},#{item.slide_id},#{item.slide_name},#{item.slide_size},
        #{item.slide_ext},#{item.slide_url},#{item.slide_dir},#{item.slide_order},#{item.create_id},
        #{item.create_time},#{item.slide_original_name}
        )
    </foreach>
 </insert>
 
 <!-- <select id="getEditSlidesCount" parameterType="java.util.Map"  resultType="java.lang.Integer">
  	  select 
	  	  count(*)
      from t_presentation_sync_points
      where presentation_id = '${presentationId}'
      <if test="querySlidesInfo != null">
      	and media_original_name like CONCAT('%','${querySlidesInfo}','%' ) 
      </if>
  </select> -->
  
  <!-- 查询编辑Slides列表 -->
 <select id="getEditSlidesList" parameterType="java.util.Map"  resultType="java.util.Map">
  	  SELECT points. ID,
			points.presentation_id,
			points.sync_slide_id,
			points.point_size,
			points.point_ext,
			points.point_url,
			points.point_dir,
			points.point_time,
			points.point_order,
			points.point_end,
			points.create_id,
			points.create_time,
			points.update_id,
			points.update_time,
			case when slides.slide_original_name is null then 'Anonymous File' else slides.slide_original_name end slide_original_name
		FROM t_presentation_sync_points points
		LEFT JOIN t_slides slides 
		    ON points.sync_slide_id = slides.ID
		WHERE
	presentation_id = '${presentationId}'
      <if test="querySlidesInfo != null and querySlidesInfo != ''">
      	and slides.slide_original_name like CONCAT('%','${querySlidesInfo}','%' ) 
      </if>
  </select>
  
  <!-- 查询编辑medias列表 -->
  <select id="getEditMediasList" parameterType="java.util.Map"  resultType="java.util.Map">
  	  SELECT
			ID,
			presentation_id,
			media_id,
			media_name,
			media_size,
			media_ext,
			media_url,
			media_dir,
			media_length,
			media_type,
			media_order,
			media_cover,
			media_start,
			media_end,
			media_width,
			media_height,
			create_id,
			create_time,
			update_id,
			update_time,
			media_original_name,
			media_convert_status,
			media_job_id
		FROM
			t_presentation_sync_media
		WHERE
			presentation_id = '${presentationId}'
      <if test="queryMediasInfo != null and queryMediasInfo != ''">
      	and media_original_name like CONCAT('%','${queryMediasInfo}','%' ) 
      </if>
  </select>
  

  <!-- 多媒体转换信息查询(弹出窗口上传) -->
  <select id="getConvertMediasInfo" parameterType="java.util.Map"  resultType="java.util.Map">
   select id, presentation_id, media_id, media_name, media_size, media_ext, media_url, media_dir, 
    media_length, media_type, media_order, media_cover, media_start, media_end, media_width, 
    media_height, create_id, create_time, update_id, update_time, media_original_name, 
    media_convert_status, media_job_id 
   from t_presentation_sync_media where media_id = '${mediaId}' and presentation_id = '${presentationId}'
  </select>
  
  <!-- 课程分类查询 -->
  <select id="queryClassificationList" parameterType="java.util.Map"  resultType="java.util.Map">
  	  SELECT
			class.id, 
			class.classification_name, 
			class.classification_desc, 
			class.classification_parent_id, 
			class.classification_rel_id, 
    		class.account_id, 
    		class.create_id, 
    		class.create_time, 
    		class.update_id, 
    		class.update_time
		FROM
			t_classification class
		WHERE 1=1
			<if test="presentationId != null and presentationId != ''">
			and class.ID IN (
				SELECT
					rel.classification_id
				FROM
					t_classification_items_rel rel
				WHERE
					rel.item_id = '${presentationId}'
				and rel.item_type = 1
			)
			</if>
			<if test="presentationId == null or presentationId == ''">
				<if test="id == null or id == ''">
					<if test="parentId != null and parentId != ''">
						and class.classification_parent_id = '${parentId}'
					</if>
					<if test="parentId == null or parentId == ''">
						and class.classification_parent_id = '0'
					</if>
				</if>
				<if test="id != null and id != ''">
					and class.classification_parent_id = (select clazz.classification_parent_id from t_classification clazz where clazz.id = '${id}') 
				</if>
			</if>
			ORDER BY class.classification_level
  </select>
  	 
	 <!-- 课程分类查询 -->
  <select id="isExistName" parameterType="java.util.Map"  resultType="java.util.Map">
  	  SELECT id from t_presentation where presentation_name = #{presentationName} and account_id=#{accountId}
  </select>
  
  <!-- 设置Presentation信息 - 获取详细信息（关联查询图片路径） -->
	 <select id="findPresentationList" parameterType="java.util.Map"  resultType="java.util.Map">
		 SELECT
			pre.*,
			att.ID attachment_id,
			att.attach_dir,
			att.attach_url,
			att.rel_id,
			att.attach_name,
			att.attach_ext,
			att.attach_type,
			att.generate_name,
			userInfo.nick_name
		FROM
			t_presentation pre left join t_user userInfo on pre.create_id = userInfo.id
		LEFT JOIN t_attachment att on pre.id = att.rel_id  and att.attach_type='5'
		where
		
			 pre.account_id = #{accountId,jdbcType=VARCHAR} 
			and (pre.create_id = #{loginUserId}  or is_publish=1 or presentation_owner=#{loginUserId}) 
		    
		<if test="searchWord != null">
			and pre.presentation_name like CONCAT('%','${searchWord}','%' ) 
		</if>
		<if test="classificationIdList != null">
			and pre.ID IN (
				SELECT
					rel.item_id
				FROM
					t_classification_items_rel rel
				WHERE
					rel.classification_id in 
					<foreach collection="classificationIdList" item="item" open="(" separator=","  close=")">
				        #{item}
				    </foreach>
				    and rel.item_type = 1
			)
		</if>
		<if test="tagIdList != null">
			and pre.ID IN (
				SELECT
					tag.item_id
				FROM
					t_tags_items_rel tag
				WHERE
					tag.tags_id in <foreach collection="tagIdList" item="item" open="(" separator=","  close=")">
				        #{item}
				    </foreach>
				  and tag.item_type = 1
			)
		</if>
		ORDER BY
			create_time DESC,id
	 </select>
	 
	 <!-- 非标准课件包删除 -->
 	<!-- <update id="delPresentationFiles" parameterType="java.util.Map">
	 	update t_presentation_files set presentation_id = '' where id = #{presentationFilesId}
 	</update>
 	 -->
 	 <!-- 非标准课件包删除 (解压缩文件)-->
 	<delete id="delPresentationPackageItem" parameterType="java.util.Map">
 		<!-- 删除章节非标准课件包解压文件数据 -->
	 	delete from t_presentation_package_item  where package_id = #{presentationFilesId}  AND presentation_id = #{presentationId};
 	</delete>
 	
 	<delete id="delPresentationFiles" parameterType="java.util.Map">
	 	delete from t_presentation_files  where id = #{presentationFilesId}
 	</delete>
 	
 	<select id="findPresentationPackageList" parameterType="java.util.Map"  resultType="java.util.Map">
  	  select 
	  	files.id, 
	  	files.file_name, 
	  	files.file_size, 
	  	files.file_ext, 
	  	files.file_url, 
	  	files.file_dir, 
	  	files.create_id, 
	  	files.create_time, 
	  	files.update_id, 
    	files.update_time, 
    	files.account_id, 
    	files.file_original_name, 
    	files.file_type, 
    	files.presentation_id
      from t_presentation_files files
      where <!-- files.presentation_id = '' --> 1 = 1
      <if test="accountId != null">
      	and account_id = #{accountId}
      </if>
      <if test="keyWords != null">
      	and file_original_name like CONCAT('%','${keyWords}','%' ) 
      </if>
      <if test="presentationId != null">
      	and id not in (select sync.package_id from t_presentation_package_item sync where sync.presentation_id = #{presentationId}) 
      </if>
      order by create_time desc
  </select>
  
  
  <select id="findAttachmentPresentationPackageList" parameterType="java.util.Map"  resultType="java.util.Map">
	  	SELECT
			atta. ID,
			atta.attach_dir,
			atta.attach_url,
			atta.rel_id,
			atta.attach_name,
			atta.attach_ext,
			atta.attach_type,
			atta.create_id,
			atta.create_time,
			atta.update_id,
			atta.update_time,
			atta.generate_name,
			atta.attach_size
		FROM
			t_attachment atta
		WHERE
			atta.attach_type = '51'
		AND atta.is_convert = '1'
		<if test="presentationId != null">
		AND NOT EXISTS (
			SELECT
				1
			FROM
				t_presentation_package_item sync
			WHERE
				sync.presentation_id = #{ presentationId}
			AND	
				sync.package_id = atta.id
		)
		</if>
		<if test="keyWords != null">
		AND atta.attach_name LIKE CONCAT ('%', '${keyWords}', '%')
		</if>
		 <if test="userId != null">
		AND atta.create_id =#{ userId }
		</if>
		ORDER BY
			atta.create_time DESC
  </select>
  
  <!-- 系统多媒体保存 查询保存的目标多媒体或PPT详细-->
  <select id="getSyncPackageList" parameterType="java.util.List" resultType="java.util.Map">
 	 select 
  	  	id, file_name, file_size, file_ext, file_url, file_dir, create_id, create_time, update_id, 
    	update_time, account_id, file_original_name, file_type, presentation_id
     from t_presentation_files
      where id in<foreach collection="list" item="item" open="(" separator=","  close=")">
	        #{item.id}
	    </foreach>
  </select>
  
  <select id="selectFileList" parameterType="java.util.Map"  resultType="java.util.Map">
  	  SELECT 
	  	files.id, 
	  	files.file_name, 
	  	files.file_size, 
	  	files.file_ext, 
	  	files.file_url, 
	  	files.file_dir, 
	  	files.create_id, 
	  	files.create_time, 
	  	files.update_id, 
    	files.update_time, 
    	files.account_id, 
    	files.file_original_name, 
    	files.file_type, 
    	files.presentation_id
      FROM 
      	t_presentation_files files
      WHERE  
      	EXISTS (
      		SELECT 
      			1
			FROM
				t_presentation_package_item item
			WHERE
				item.account_id = #{accountId}
			AND 
				item.presentation_id = #{presentationId}
			AND
				item.package_id = files.id
		) 
		AND
			account_id = #{accountId}
		AND
			presentation_id = #{presentationId}
      ORDER BY 
      		create_time desc
  </select>
  
   <select id="selectPresenetionList" parameterType="java.util.Map"  resultType="java.util.Map">
  	  select 
	  	files.id, 
	  	files.file_name, 
	  	files.file_size, 
	  	files.file_ext, 
	  	files.file_url, 
	  	files.file_dir, 
	  	files.create_id, 
	  	files.create_time, 
	  	files.update_id, 
    	files.update_time, 
    	files.account_id, 
    	files.file_original_name, 
    	files.file_type, 
    	files.presentation_id,
    	(select count(*) from t_presentation_package_item item where item.package_id=files.id) as package_count
      from t_presentation_files files
      where 
		   files.presentation_id = #{presentationId}
      order by create_time desc
  </select>
  
  
  <!-- 设置Presentation信息 - 获取详细信息（关联查询图片路径） -->
	 <select id="findPresentationListByKeyword" parameterType="java.util.Map"  resultType="java.util.Map">
		 SELECT
			pre.*,
			att.ID attachment_id,
			att.attach_dir,
			att.attach_url,
			att.rel_id,
			att.attach_name,
			att.attach_ext,
			att.attach_type,
			att.generate_name,
			userInfo.nick_name
		FROM
			t_presentation pre left join t_user userInfo on pre.create_id = userInfo.id
		LEFT JOIN t_attachment att on pre.id = att.rel_id and pre.presentation_cover = att.generate_name
		where 1=1 
		
		<if test="isPublish != null">
			and pre.is_publish= #{isPublish,jdbcType=INTEGER}
		</if>
		<if test="accountId != null">
			and pre. account_id = #{accountId,jdbcType=VARCHAR}
		</if>
		<if test="keywords != null">
				and pre.presentation_name like CONCAT('%','${keywords}','%')
		</if>
		<if test="list != null">
			AND pre.id not IN 
			<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          	 	#{item}       
       		</foreach>
		</if>
		ORDER BY pre.presentation_name, pre.create_time DESC
	 </select>
	 
	 
	 <!-- 获取章节压缩包规则属性-->
	 <select id="getPresentationPackgesProfile" parameterType="java.util.Map"  resultType="java.util.Map">
		 SELECT
			t_presentation_files."id" AS file_id,
			t_presentation_files.file_original_name as file_name,
			t_presentation_model_package."id" as  package_id,
			t_presentation_model_package.is_count_down,
			case t_presentation_model_package.is_count_down  
				when '1' then t_presentation_model_package.count_down
				else '' end as 	count_down
		FROM
			t_presentation_files  
		LEFT JOIN
			t_presentation_model_package
		ON 
			t_presentation_model_package.file_id = t_presentation_files."id"
		WHERE 
			 t_presentation_files.presentation_id = #{presentationId}
		AND
			exists (
	      		SELECT 
	      			1
				FROM
					t_presentation_package_item item
				WHERE
					item.account_id = #{accountId}
				AND 
					item.presentation_id = #{presentationId}
				AND
					item.package_id = t_presentation_files.id
		) 
		ORDER BY 
			file_id, t_presentation_files.create_time DESC
	 </select>
	 
	 <!-- 使用章节信息生成课程基本信息 -->
	 <insert id="insertCourseInfoFromPresentation" parameterType="java.util.Map" >
	 	INSERT INTO t_course(
	 		id,
	 		course_name,
	 		course_description,
	 		course_type,
	 		is_publish,
	 		account_id,
	 		create_id,
	 		create_time,
	 		group_id,
	 		is_edit,
	 		course_owner
	 	)SELECT   
	 		#{courseId},
	 		presentation_name,
	 		presentation_desc,
	 		'1',
	 		'0',
	 		account_id,
	 		#{userId},
	 		#{createTime},
	 		#{groupId},
	 		'0',
	 		#{userId}
	 	FROM 
	 		t_presentation
	 	WHERE
	 		id = #{presentationId}
	 	AND
	 		account_id = #{accountId}
	 </insert>
	 
	 <insert id="insertCourseClassificationFromPresetation" parameterType="java.util.Map">
	 	INSERT INTO t_classification_items_rel(
	 		id,
	 		item_id,
	 		item_type,
	 		classification_id,
	 		create_id,
	 		create_time
	 	)VALUES
	 	<foreach collection="classificationList" item="item"  separator="," >
	      (#{item.id,jdbcType=VARCHAR}, 
	      #{courseId,jdbcType=VARCHAR},
	      '21', 
	      #{item.classificationId,jdbcType=VARCHAR},
	      #{userId},
	      #{createTime,jdbcType=TIMESTAMP})
	    </foreach> 
	 </insert>
	 
	 <insert id="insertCourseTagFromPresetation" parameterType="java.util.Map">
	 	INSERT INTO t_tags_items_rel(
	 		id,
	 		item_id,
	 		item_type,
	 		tags_id,
	 		create_id,
	 		create_time
	 	)VALUES
	 	<foreach collection="tagList" item="item"  separator="," >
	      (#{item.id,jdbcType=VARCHAR}, 
	      #{courseId,jdbcType=VARCHAR},
	      '21', 
	      #{item.tagsId,jdbcType=VARCHAR}, 
	      #{userId},
	      #{createTime,jdbcType=TIMESTAMP})
	    </foreach> 
	 </insert>
	 
	 <insert id="insertCourseItemFromPresetation" parameterType="java.util.Map">
	 	INSERT INTO t_course_online_item(
	 		id,
	 		item_id,
	 		item_type,
	 		course_id,
	 		create_id,
	 		create_time
	 	)VALUES(
	 		#{courseItemId},
	 		#{presentationId},
	 		'0',
	 		#{courseId},
	 		#{userId},
	 		#{createTime}
	 	)
	 </insert>
	 
	 <select id="getPresentationInforById" resultMap="BasePresentationBotMap"  parameterType="java.util.Map">
SELECT
t1.id,
t1.presentation_name,
t1.create_id,
t1.create_time,
t1.update_id,
t1.update_time,
t1.presentation_desc,
t1.presentation_cover,
t1.presentation_model,
t1.persentation_percentage,
t1.is_pass_elements,
t1.is_pass_quizs,
t1.is_course,
t1.is_pass_hours,
t1.account_id,
t1.is_pass_percentage,
t1.is_publish,
t2.attach_url,
t2.generate_name
FROM
t_presentation AS t1 left join  
t_attachment AS t2
on 
t1."id" = t2.rel_id  AND t2.attach_type = '5' 
where t1."id" =#{presentationId} 


	 </select>
	 
	 
<select id="findPresentationQuoteList"  resultType="java.util.Map"  parameterType="java.util.Map">
select * from (
SELECT
	t2.quiz_name as quote_name,
	'测试' AS quote_type 
FROM
	t_presentation_sync_quizs t1,
	t_quiz t2 
WHERE
	t1.quiz_id = t2."id"  and t1.presentation_id = #{presentationId} 
	UNION
SELECT
	t4.survey_name as quote_name,
	'问卷' AS quote_type 	
FROM
	t_presentation_sync_survey t3,
	t_survey t4 
WHERE
	t3.survey_id = t4.ID  and t3.presentation_id = #{presentationId} 

) T
</select>	 


<select id="findQuoteForCourse" resultType="java.util.Map"  parameterType="java.util.Map">

SELECT
	t3.course_name,
	t3.is_publish,
	t4.user_name,
	t4.user_mail
FROM
	t_presentation t1,
	t_course_online_item t2,
	t_course t3,
	t_user t4
WHERE
	t1.ID = t2.item_id
	and 
	t2.course_id = t3."id"
	and 
	t3.create_id = t4."id"
	and t1."id"= #{presentationId} 


</select>

<select id="getSyncSlideMaxOrder" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select max(slide_order) from t_presentation_sync_slides where presentation_id = #{presentationId}
	
	</select>	 
	  
	<select id="getSyncSlideMaxPointTime" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select max(point_time) from t_presentation_sync_points where presentation_id = #{presentationId}
	
	</select>	

	  
	  
	  
<update id="updatePresentationModelSync"   parameterType="com.deodio.elearning.persistence.model.PresentationModelSync">
	update  t_presentation_model_sync  
	<set>

      interval = #{interval,jdbcType=BIGINT},
    
    <if test="createId != null">
        length = #{length,jdbcType=BIGINT},
     </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isManually != null">
        is_manually = #{isManually,jdbcType=SMALLINT},
      </if>
      <if test="isInitSyncPoint != null">
        is_init_sync_point = #{isInitSyncPoint,jdbcType=SMALLINT},
      </if>
         <if test="isSlideShow != null">
        is_slide_show = #{isSlideShow},
      </if>
        length = #{length,jdbcType=BIGINT},
        
        slide_length = #{slideLength,jdbcType=INTEGER},
      </set>
      
      where  presentation_id = #{presentationId,jdbcType=VARCHAR}

</update>





</mapper>