<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deodio.elearning.persistence.mapper.customize.CourseModelOnlineCustomizeMapper">

  <!-- 插入线上课程内容 -->
  <insert id="insertCourseOnlineItem" parameterType="java.util.List">
   
    insert into t_course_online_item (id, item_id, item_type, 
      item_sort, course_id, item_lt, 
      item_gt, create_id, update_id, 
      create_time, update_time, item_lt_pos, 
      item_gt_pos)
    values 
    <foreach collection="list" item="item"  separator="," >
      (#{item.id,jdbcType=VARCHAR}, #{item.itemId,jdbcType=VARCHAR}, #{item.itemType,jdbcType=INTEGER}, 
      #{item.itemSort,jdbcType=INTEGER}, #{item.courseId,jdbcType=VARCHAR}, #{item.itemLt,jdbcType=INTEGER}, 
      #{item.itemGt,jdbcType=INTEGER}, #{item.createId,jdbcType=VARCHAR}, #{item.updateId,jdbcType=VARCHAR}, 
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.itemLtPos,jdbcType=INTEGER}, 
      #{item.itemGtPos,jdbcType=INTEGER})
     </foreach>
  </insert>
  
  <!-- 通过课程编号获取线上课程信息 -->
  <select id="queryCourseOnlineInfoById" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT
		*,
		t_user.nick_name,
		att.ID attachment_id,
		att.attach_dir,
		att.attach_url,
		att.rel_id,
		att.attach_name,
		att.attach_ext,
		att.attach_type,
		att.generate_name
	FROM t_course
	INNER JOIN t_user on t_user.id = t_course.create_id
	LEFT JOIN  t_course_model_online  online on t_course."id" = online.course_id
	LEFT JOIN  t_attachment att on t_course.id = att.rel_id 
where t_course.id = #{courseId}
  and t_course.course_type = '1'
  </select>
  
  <!-- 通过课程编号获取线上课程信息 -->
  <select id="queryCourseOnlineProfileById" parameterType="java.util.Map" resultType="java.util.Map" >
	SELECT
		t_course.*,
		t_course.id as course_id,
		online.*,
		online.id as course_online_id,
		att.ID attachment_id,
		att.attach_dir,
		att.attach_url,
		att.rel_id,
		att.attach_name,
		att.attach_ext,
		att.attach_type,
		att.generate_name,
		(SELECT count(id) FROM t_course_online_item WHERE 
		course_id =#{courseId}) as course_train_times
	FROM t_course
	LEFT JOIN  t_course_model_online  online on t_course."id" = online.course_id
	LEFT JOIN  t_attachment att on t_course.id = att.rel_id  and att.attach_type='5'
where t_course.id = #{courseId}
  and t_course.course_type = '1'

  </select>
  
  <!-- 通过课程编号获取线上课程内容信息 -->
  <select id="queryCourseOnlineItem" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT 
		course_con.*,
		MAX(
				case course_con.item_type 
					when '0' then   presentation.presentation_name 
					when '1' then quiz.quiz_name
					when '2' then  survey.survey_name END
		 ) item_name,
		MAX(
				case course_con.item_type 
					when '0' then   presentation.presentation_desc 
					when '1' then quiz.quiz_desc
					when '2' then  survey.survey_desc END
		 ) item_desc ,
		max(att.ID) attachment_id,
		max(att.attach_dir) as attach_dir,
		max(att.attach_url) as attach_url,
		max(att.rel_id) as rel_id,
		max(att.attach_name) as attach_name,
		max(att.attach_ext) as attach_ext,
		max(att.attach_type) as attach_type,
		max(att.generate_name) as generate_name
	FROM
		t_course_online_item course_con
	LEFT  JOIN  
		t_presentation  presentation   on course_con.item_id = presentation.id 
	LEFT JOIN
	    t_quiz quiz on course_con.item_id = quiz.id
	LEFT JOIN   
		t_survey  survey on course_con.item_id = survey.id
	LEFT JOIN   <!-- 测验，问卷无图标设置功能,查询数据无需关联,可考虑设置默认图标 -->
		t_attachment att on course_con.item_id = att.rel_id
		and att.attach_type='5'
	WHERE 
		course_con.course_id = #{courseId}
	GROUP BY 
		course_con.id,course_con.item_type
	ORDER BY 
		course_con.item_sort asc
  </select>
  
  <select id="findQuoteCoursewareList" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT 
		course_con.*,
		MAX(
			case course_con.item_type 
				when '0' then presentation.presentation_name 
				when '1' then quiz.quiz_name
				when '2' then survey.survey_name END
		 ) item_name,
		 MAX(
			case course_con.item_type 
				when '0' then presentation.is_publish 
				when '1' then quiz.is_publish
				when '2' then survey.is_publish END
		 ) is_publish
  	FROM 
  		t_course_online_item course_con
	LEFT JOIN  
		t_presentation presentation on course_con.item_id = presentation.id
	LEFT JOIN
	    t_quiz quiz on course_con.item_id = quiz.id
	LEFT JOIN   
		t_survey survey on course_con.item_id = survey.id
	WHERE 
		course_con.course_id = #{courseId}
	GROUP BY 
		course_con.id
	ORDER BY 
		course_con.item_sort asc	
  </select>
  
</mapper>