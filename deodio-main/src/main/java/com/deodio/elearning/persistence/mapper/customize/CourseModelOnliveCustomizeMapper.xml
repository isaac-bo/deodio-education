<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deodio.elearning.persistence.mapper.customize.CourseModelOnliveCustomizeMapper">

  <!-- 插入线上课程内容 -->
  <insert id="insertCourseOnliveItem" parameterType="java.util.List">
   
   <!--  insert into t_course_online_item (id, item_id, item_type, 
      item_sort, course_id, item_lt, 
      item_gt, create_id, update_id, 
      create_time, update_time, item_lt_pos, 
      item_gt_pos)
    values 
    <foreach collection="list" item="item"  separator="," >
      (#{item.id,jdbcType=VARCHAR}, #{item.itemId,jdbcType=VARCHAR}, #{item.itemType,jdbcType=INTEGER}, 
      #{item.itemSort,jdbcType=INTEGER}, #{item.courseId,jdbcType=VARCHAR}, #{item.itemLt,jdbcType=INTEGER}, 
      #{item.itemGt,jdbcType=INTEGER}, #{item.createId,jdbcType=VARCHAR}, #{item.updateId,jdbcType=VARCHAR}, 
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.itemLtPos,jdbcType=INTEGER}, 
      #{item.itemGtPos,jdbcType=INTEGER})
     </foreach> -->
  </insert>
  
  <!-- 通过课程编号获取线上课程信息 -->
  <select id="queryCourseOnliveInfoById" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT
		*,
		(
			SELECT 
				nick_name 
			FROM
				t_user userInfo
			WHERE  
				userInfo.id = course.create_id
		) nick_name,
		att.ID attachment_id,
		att.attach_dir,
		att.attach_url,
		att.rel_id,
		att.attach_name,
		att.attach_ext,
		att.attach_type,
		att.generate_name
	FROM
		(select * from t_course where id = #{courseId}) course
	LEFT JOIN 
		t_course_model_onlive onlive on course.id = onlive.course_id
	LEFT JOIN 
		t_attachment att on course.id = att.rel_id and course.course_cover_img = att.generate_name
  </select>
  
  <!-- 通过课程编号获取线上课程信息 -->
  <select id="queryCourseOnliveProfileById" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT
		course.*,
		course.id as course_id,
		onlive.*,
		onlive.id as course_onlive_id,
		att.ID attachment_id,
		att.attach_dir,
		att.attach_url,
		att.rel_id,
		att.attach_name,
		att.attach_ext,
		att.attach_type,
		att.generate_name
	FROM
		(SELECT * FROM t_course WHERE course_type = '3' and id = #{courseId}) course
	LEFT JOIN
		t_course_model_onlive  onlive on course."id" = onlive.course_id
	LEFT JOIN 
		t_attachment att on course.id = att.rel_id and course.course_cover_img = att.generate_name
  </select>
  
  <!-- 通过课程编号获取线上课程内容信息 -->
  <select id="queryCourseOnliveItem" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT 
		*
	FROM
		t_course_onlive_item 
	WHERE 
		course_id = #{courseId}
	AND
		item_step_no = #{stepNo}
	ORDER BY 
		create_time asc
  </select>
  
  <!-- 插入在线课程内容 -->
  <insert id="insertCourseOnliveItemBatch" parameterType="java.util.List">
     insert into t_course_onlive_item (id, course_id, item_step_no, 
      start_time, expire_time, item_name, 
      item_trainers, account_id, create_id, 
      create_time, update_id, update_time, 
      item_type, item_period)
    values 
    <foreach collection="list" item="item"  separator="," >
      (#{item.id,jdbcType=VARCHAR}, #{item.courseId,jdbcType=VARCHAR}, #{item.itemStepNo,jdbcType=INTEGER}, 
      #{item.startTime,jdbcType=TIMESTAMP}, #{item.expireTime,jdbcType=TIMESTAMP}, #{item.itemName,jdbcType=VARCHAR}, 
      #{item.itemTrainers,jdbcType=VARCHAR}, #{item.accountId,jdbcType=VARCHAR}, #{item.createId,jdbcType=VARCHAR}, 
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateId,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, 
      #{item.itemType,jdbcType=SMALLINT}, #{item.itemPeriod,jdbcType=INTEGER})
    </foreach> 
  </insert>
  
  <delete id="delCourseOnliveItemBatch" parameterType="java.util.List">  
    DELETE FROM t_course_onlive_item WHERE id IN  
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">   
        #{item.id}   
    </foreach>  
  </delete>  
  
  <update id="updateCourseOnliveItemBatch"  parameterType="java.util.List">
	   <foreach collection="list" item="item" index="index" open="" close="" separator=";">
		  update t_course_onlive_item
		    <set >
		      <if test="item.id != null" >
		        id = #{item.id,jdbcType=VARCHAR},
		      </if>
		      <if test="item.courseId != null" >
		        course_id = #{item.courseId,jdbcType=VARCHAR},
		      </if>
		      <if test="item.itemStepNo != null" >
		        item_step_no = #{item.itemStepNo,jdbcType=INTEGER},
		      </if>
		      <if test="item.startTime != null" >
		        start_time = #{item.startTime,jdbcType=TIMESTAMP},
		      </if>
		      <if test="item.expireTime != null" >
		        expire_time = #{item.expireTime,jdbcType=TIMESTAMP},
		      </if>
		      <if test="item.itemName != null" >
		        item_name = #{item.itemName,jdbcType=VARCHAR},
		      </if>
		      <if test="item.itemTrainers != null" >
		        item_trainers = #{item.itemTrainers,jdbcType=VARCHAR},
		      </if>
		      <if test="item.accountId != null" >
		        account_id = #{item.accountId,jdbcType=VARCHAR},
		      </if>
		      <if test="item.createId != null" >
		        create_id = #{item.createId,jdbcType=VARCHAR},
		      </if>
		      <if test="item.createTime != null" >
		        create_time = #{item.createTime,jdbcType=TIMESTAMP},
		      </if>
		      <if test="item.updateId != null" >
		        update_id = #{item.updateId,jdbcType=VARCHAR},
		      </if>
		      <if test="item.updateTime != null" >
		        update_time = #{item.updateTime,jdbcType=TIMESTAMP},
		      </if>
		      <if test="item.itemType != null" >
		        item_type = #{item.itemType,jdbcType=SMALLINT},
		      </if>
		      <if test="item.itemPeriod != null" >
		        item_period = #{item.itemPeriod,jdbcType=INTEGER},
		      </if>
		    </set>
		    where id = #{item.id,jdbcType=VARCHAR}
  		</foreach>
  </update>
  
</mapper>