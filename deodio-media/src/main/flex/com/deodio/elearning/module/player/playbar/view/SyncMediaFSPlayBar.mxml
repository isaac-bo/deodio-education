<?xml version="1.0" encoding="utf-8"?>
<p:IPlayBar implements="com.deodio.elearning.module.player.playbar.ac.IPlayBar" 
			xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns:p="com.deodio.elearning.module.player.playbar.view.*"
			xmlns:mx="library://ns.adobe.com/flex/mx"
			xmlns:c="com.deodio.elearning.libs.containers.slider.*" creationComplete="init()">
	
	<fx:Script>
		<![CDATA[
			import com.deodio.elearning.libs.event.CommonEvent;
			import com.deodio.elearning.libs.event.MediaEvent;
			import com.deodio.elearning.libs.event.MockEvent;
			import com.deodio.elearning.libs.skins.DHSoundSliderSkin;
			import com.deodio.elearning.libs.skins.DProgressBarSkin;
			import com.deodio.elearning.libs.skins.DProgressTrackSkin;
			import com.deodio.elearning.libs.utils.CommonUtils;
			import com.deodio.elearning.model.ModelLocator;
			
			import mx.controls.Alert;
			
			[Bindable]
			private var _model:ModelLocator = ModelLocator.getInstance();
			
			override public function init():void{
				
				//				this.addChildAt(this.setSounding,this.numElements + 1);
				this.soundSlider.value = this._model.sound;
				this.soundProgress.setProgress(soundSlider.value,soundSlider.maximum);
				
				super.slider = this.slider;
				super.progress = this.progress;
				super.maxDuration = this.maxDuration;
				super.currentDuration = this.currentDuration;
				super.init();
				
				this.addEventListener(CommonEvent.SYNC_PROGRESSBAR_MAXIMUM,function(event:CommonEvent){
					var max:Number = event.data as Number;
					slider.maximum = max + 1;
				});
				
				this.addEventListener(CommonEvent.SYNC_PROGRESSBAR_VALUE,function(event:CommonEvent){
					var value:Number = event.data as Number;
					slider.value = value;
				});
				
			}
			
			private function setProgressValue(event:CommonEvent):void{
				
			}
			
			//			public function onProgressChange():void{
			//				progress.setProgress(slider.value, slider.maximum);
			//				this.dispatchEvent(new MediaEvent(MediaEvent.MEDIA_PROGRESS_CHANGE, slider.value));
			//			}
			
			//			public function onProgressClick():void{
			//				trace("-------onProgressClick----------");
			//				progress.setProgress(slider.value, slider.maximum);
			//				this.dispatchEvent(new MediaEvent(MediaEvent.MEDIA_PROGRESS_CLICK, slider.value));
			//			}
			
			//			public function onProgressThumbPress():void{
			//				trace("------onProgressThumbPress-----------");
			//				var param:Object = new Object();
			//				param.isPlayBar = true;
			//				param.value = slider.value;
			//				this.dispatchEvent(new MediaEvent(MediaEvent.MEDIA_PROGRESS_PRESS, param));
			//			}
			
			//			public function onProgressThumbRelease():void{
			//				trace("--------onProgressThumbRelease---------");
			//				var param:Object = new Object();
			//				param.isPlayBar = true;
			//				param.value = slider.value;
			//				this.dispatchEvent(new MediaEvent(MediaEvent.MEDIA_PROGRESS_RELEASE, param));
			//			}
			
			public function onPlay():void{
				this.dispatchEvent(new MediaEvent(MediaEvent.MEDIA_PLAY));
			}
			
			public function onPause():void{
				this.dispatchEvent(new MediaEvent(MediaEvent.MEDIA_PAUSE));
			}
			
			public function onStop():void{
				this.dispatchEvent(new MediaEvent(MediaEvent.MEDIA_STOP));
			}
			
			public function onForward():void{
				
			}
			
			public function onBackward():void{
				
			}
			
			//			public function onSetSounding():void{
			//				this.fullScreen.visible = !this.fullScreen.visible;
			//				this._model.isSettingSound = this.setSounding.visible = this.setSounding.includeInLayout = !this.fullScreen.visible;
			//			}
			//			
			public function onSwitchScreen():void{
				this.dispatchEvent(new MediaEvent(MediaEvent.MEDIA_SCREEN_FULL_SCREEN));
			}
			
		]]>	
	</fx:Script>
	
	<s:Rect x="0" y="0" height="100%" width="100%">
		<s:fill>
			<s:BitmapFill source="@Embed('/assets/player/playbar_full_screen.png')"/>
		</s:fill>
	</s:Rect>
	
	<mx:HBox width="100%" height="100%">
		
		<mx:HBox id="leftToolBar" width="114" height="100%" verticalAlign="middle" horizontalAlign="center" horizontalGap="0">
			<s:Group width="30" height="45" buttonMode="true" click="onBackward()">
				<s:Image id="btnBackward" x="10" y="14" source="@Embed('/assets/player/backward_btn.png')"  buttonMode="true" click="onBackward()"/>
			</s:Group>
			<s:Group id="btnPlay"  width="30" height="45" buttonMode="true" click="onPlay()">
				<s:Image x="11.5" y="13.5" source="@Embed('/assets/player/play_btn.png')"  buttonMode="true" click="onPlay()"/>
			</s:Group>
			<s:Group id="btnPause"  width="30" height="45" buttonMode="true" click="onPause()" visible="false" includeInLayout="false">
				<s:Image   x="10.5" y="15" source="@Embed('/assets/player/pause_btn.png')"  buttonMode="true" click="onPause()" />
			</s:Group>
			<s:Group width="30" height="45" buttonMode="true" click="onForward()">
				<s:Image id="btnForward" x="10" y="14" source="@Embed('/assets/player/forward_btn.png')"  buttonMode="true" click="onForward()"/>
			</s:Group>
		</mx:HBox>
		
		<mx:Canvas width="100%" height="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<mx:ProgressBar id="progress" x="5" y="20" width="554" height="5" label="" labelPlacement="center"
							barSkin="com.deodio.elearning.libs.skins.DSFProgressBarSkin" trackSkin="com.deodio.elearning.libs.skins.DSFProgressTrackSkin"
							mode="manual"/>
			<c:DHSlider id="slider" x="1" y="16" width="564" height="2"  minimum="0" maximum="20" snapInterval="0.001" showDataTip="true" allowTrackClick="false"
						skinClass="com.deodio.elearning.libs.skins.DSFSliderSkin" change="onProgressChange(this.slider,this.progress)" click="onProgressClick(this.slider,this.progress)" thumbPress="onProgressThumbPress(this.slider)" thumbRelease="onProgressThumbRelease(this.slider);"/>
			<mx:Text id="currentDuration" text="{CommonUtils.formatTimes(slider.value)}" color="#d0d0d0" width="60" x="570" y="14"/>
			<mx:Text text="/" color="#d0d0d0" width="10" x="620" y="14"/>
			<mx:Text id="maxDuration" text="{CommonUtils.formatTimes(this.slider.maximum)}" color="#d0d0d0"  width="60" x="628" y="14"/>
		</mx:Canvas>
		
		<mx:HBox width="90" height="100%" verticalAlign="middle" horizontalAlign="center" horizontalGap="17">
			<s:Image source="@Embed('/assets/player/speaker_btn.png')"  buttonMode="true" click="onSetSounding(this.fullScreen,this.setSounding)"/>
			<s:Image id="fullScreen" source="@Embed('/assets/player/fullscreen_btn.png')"  buttonMode="true" click="onSwitchScreen()"/>
		</mx:HBox>
	</mx:HBox>
	
	<mx:Canvas id="setSounding" visible="false" includeInLayout="false" x="755" y="20">
		<mx:ProgressBar id="soundProgress" x="0" y="0" width="40" height="8" label="" labelPlacement="center"
						barSkin="com.deodio.elearning.libs.skins.DProgressBarSkin" trackSkin="com.deodio.elearning.libs.skins.DProgressTrackSkin"
						mode="manual"/>
		<c:DHSlider id="soundSlider" x="0" y="10" width="40" height="8"  minimum="0" maximum="1" snapInterval="0.1" showDataTip="false" allowTrackClick="false"
					skinClass="com.deodio.elearning.libs.skins.DHSoundSliderSkin" change="onSoundProgressChange(this.soundSlider,this.soundProgress)"/>
	</mx:Canvas>
	
</p:IPlayBar>
